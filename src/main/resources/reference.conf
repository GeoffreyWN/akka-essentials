akka {
  loggers               = ["akka.event.slf4j.Slf4jLogger"]
  loglevel              = "DEBUG"
}

# time assertions test config

specialTimedAssertionsConfig {
  akka.test.single-expect-default = 10s
}

# intercepting log messages test
interceptingLogMessages {
  akka {
    loggers = ["akka.testkit.TestEventListener"]
    test {
      filter-leeway = 5s

    }
  }
}

# routers demo
routersDemo {
  akka {
    actor.deployment {
      /poolPatron2 {
        router = round-robin-pool
        nr-of-instances = 5
      }

      /groupPatron2 {
        router = round-robin-group
        routees.paths = ["/user/worker_1", "/user/worker_2", "/user/worker_3", "/user/worker_4", "/user/worker_5"]
      }

    }
  }
}

# dispatchers demo

my-dispatcher {
  type = Dispatcher
  executor  = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size  = 3
  }
  throughput = 30
}

dispatchersDemo {
  akka.actor.deployment {
    /counterAction {
      dispatcher = my-dispatcher
    }
  }
}

# mailboxes demo


mailboxesDemo {
  support-ticket-dispatcher {
    mailbox-type = "com.akkaEssentials.infra.Mailboxes$SupportTicketPriorityMailbox"
  }
  control-mailbox {
    mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
  }
  akka.actor.deployment {
    /controlAwareActorV2 {
      mailbox =  control-mailbox
    }
  }

}
